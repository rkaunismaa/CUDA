# Generated by ChatGPT 4o
# https://chatgpt.com/c/8a39f629-37df-4d91-be34-95285007424d
# Sunday, June 9, 2024

# Makefile for a CUDA program in the current directory
#
# Usage:
#   make                    - Build the program with the default name (my_cuda_program)
#   make NAME=<name>        - Build the program with the specified name
#   make clean NAME=<name>  - Clean up the build files (object files and the executable)
#
# Example:
#   make NAME=cuda_app  - Build the program and name the executable cuda_app
#
# Compiler
# NVCC := /usr/local/cuda/bin/nvcc
CUDA_PATH=/usr/local/cuda
HOST_COMPILER ?= g++
NVCC=${CUDA_PATH}/bin/nvcc -ccbin ${HOST_COMPILER}

# We need OpenCV ...
OPENCV_INCLUDE = -I/usr/include/opencv4
# OPENCV_LIBS = -L/usr/lib/x86_64-linux-gnu -lopencv_core -lopencv_imgcodecs -lopencv_highgui -lopencv_imgproc -lcudart

# OpenCV flags (use pkg-config to get the correct flags)
_OPENCV_CFLAGS = $(shell pkg-config --cflags opencv4)
_OPENCV_LIBS = $(shell pkg-config --libs opencv4)

# Compiler flags for debug mode for Ampere GPU (compute capability 8.0)
# NVCCFLAGS := -G -O0 -arch=sm_80
# NVCCFLAGS := -g -G -O0 -arch=sm_80 -m64 -lineinfo
NVCCFLAGS := -g -G -O0 -arch=sm_80 -m64 

# Name of the program (can be passed as a variable)
NAME ?= my_cuda_program

# Automatically find the CUDA source file in the current directory
SRC := $(wildcard *.cu)
OBJ := $(patsubst %.cu, %.o, $(SRC))
TARGET := $(NAME)

# Default target
all: $(TARGET)


# # Compile
# $(TARGET): $(SRCS)
# 	$(NVCC) $(CUDAFLAGS) $(SRCS) -o $(TARGET) $(CXXFLAGS) $(OPENCV_CFLAGS) $(OPENCV_LIBS) -L$(CUDA_LIB) -I$(CUDA_INC)


# Build the target
$(TARGET): $(OBJ)
	$(NVCC) $(OPENCV_INCLUDE) $(NVCCFLAGS) -o $@ $^ 

#  $(NVCC) $(OPENCV_INCLUDE) $(NVCCFLAGS) -o $@ $^ $(OPENCV_LIBS)

# Compile CUDA source file to object file
%.o: %.cu
	$(NVCC) $(OPENCV_INCLUDE) $(NVCCFLAGS) -c -o $@ $<

# Clean up
clean:
	rm -f $(OBJ) $(TARGET)

# Phony targets
.PHONY: all clean

